syntax = "proto3";
package learner;

import "ndarray.proto";
import "pingpong.proto";

service LearnerService {
  rpc Persistence(stream Ping) returns (stream Pong);

  rpc RegisterActor(Empty) returns (RegisterActorResponse);

  rpc GetAction(GetActionRequest) returns (Action);
  rpc GetPolicyVariables(Empty) returns (NNVariables);
  rpc Add(AddRequest) returns (Empty);
  // Update variables from evolver
  rpc GetNNVariables(Empty) returns (NNVariables);
  rpc UpdateNNVariables(NNVariables) returns (Empty);

  rpc ForceClose(Empty) returns (Empty);
}

message RegisterActorResponse{
  string model_abs_dir = 1;
  int32 unique_id = 2;

  string reset_config_json = 3;
  string model_config_json = 4;
  string sac_config_json = 5;
}

message GetActionRequest {
  repeated NDarray obs_list = 1;
  NDarray rnn_state = 3;
}
message Action {
  NDarray action = 1;
  NDarray rnn_state = 3;
}

message AddRequest {
  repeated NDarray l_obses_list = 1;
  NDarray l_actions = 2;
  NDarray l_rewards = 3;
  repeated NDarray next_obs_list = 4;
  NDarray l_dones = 5;
  NDarray l_mu_probs = 6;
  NDarray l_rnn_states = 7;
}

message NNVariables {
  bool succeeded = 1;
  repeated NDarray variables = 2;
}
