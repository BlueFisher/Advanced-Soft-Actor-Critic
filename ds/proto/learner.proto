syntax = "proto3";
package learner;

import "ndarray.proto";
import "pingpong.proto";

service LearnerService {
  rpc Persistence(stream Ping) returns (stream Pong);

  rpc RegisterReplay(Empty) returns (RegisterReplayResponse);
  rpc RegisterActor(Empty) returns (RegisterActorResponse);

  rpc GetAction(GetActionRequest) returns (Action);
  rpc GetPolicyVariables(Empty) returns (NNVariables);
  rpc GetTDError(GetTDErrorRequest) returns (TDError);
  // Update variables from evolver
  rpc GetNNVariables(Empty) returns (NNVariables);
  rpc UpdateNNVariables(NNVariables) returns (Empty);
}

message RegisterReplayResponse{
  string model_abs_dir = 1;

  string reset_config_json = 2;
  string replay_config_json = 3;
  string sac_config_json = 4;
}

message RegisterActorResponse{
  string model_abs_dir = 1;
  int32 unique_id = 2;

  string reset_config_json = 3;
  string replay_config_json = 4;
  string sac_config_json = 5;
}

message GetActionRequest {
  repeated NDarray obs_list = 1;
  NDarray rnn_state = 3;
}
message Action {
  NDarray action = 1;
  NDarray rnn_state = 3;
}

message NNVariables {
  repeated NDarray variables = 1;
}

message GetTDErrorRequest {
  repeated NDarray n_obses_list = 1;
  NDarray n_actions = 2;
  NDarray n_rewards = 3;
  repeated NDarray next_obs_list = 4;
  NDarray n_dones = 5;
  NDarray n_mu_probs = 6;
  NDarray n_rnn_states = 7;
}
message TDError {
  NDarray td_error = 1;
}