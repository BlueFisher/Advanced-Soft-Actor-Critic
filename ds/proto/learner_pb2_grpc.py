# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import learner_pb2 as learner__pb2
import ndarray_pb2 as ndarray__pb2
import pingpong_pb2 as pingpong__pb2


class LearnerServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Persistence = channel.stream_stream(
        '/LearnerService/Persistence',
        request_serializer=pingpong__pb2.Ping.SerializeToString,
        response_deserializer=pingpong__pb2.Pong.FromString,
        )
    self.GetAction = channel.unary_unary(
        '/LearnerService/GetAction',
        request_serializer=learner__pb2.GetActionRequest.SerializeToString,
        response_deserializer=learner__pb2.Action.FromString,
        )
    self.GetPolicyVariables = channel.unary_unary(
        '/LearnerService/GetPolicyVariables',
        request_serializer=ndarray__pb2.Empty.SerializeToString,
        response_deserializer=learner__pb2.PolicyVariables.FromString,
        )
    self.GetTDError = channel.unary_unary(
        '/LearnerService/GetTDError',
        request_serializer=learner__pb2.GetTDErrorRequest.SerializeToString,
        response_deserializer=learner__pb2.TDError.FromString,
        )


class LearnerServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def Persistence(self, request_iterator, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetAction(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetPolicyVariables(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetTDError(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_LearnerServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Persistence': grpc.stream_stream_rpc_method_handler(
          servicer.Persistence,
          request_deserializer=pingpong__pb2.Ping.FromString,
          response_serializer=pingpong__pb2.Pong.SerializeToString,
      ),
      'GetAction': grpc.unary_unary_rpc_method_handler(
          servicer.GetAction,
          request_deserializer=learner__pb2.GetActionRequest.FromString,
          response_serializer=learner__pb2.Action.SerializeToString,
      ),
      'GetPolicyVariables': grpc.unary_unary_rpc_method_handler(
          servicer.GetPolicyVariables,
          request_deserializer=ndarray__pb2.Empty.FromString,
          response_serializer=learner__pb2.PolicyVariables.SerializeToString,
      ),
      'GetTDError': grpc.unary_unary_rpc_method_handler(
          servicer.GetTDError,
          request_deserializer=learner__pb2.GetTDErrorRequest.FromString,
          response_serializer=learner__pb2.TDError.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'LearnerService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
