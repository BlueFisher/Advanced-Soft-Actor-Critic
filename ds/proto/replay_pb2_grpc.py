# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import ndarray_pb2 as ndarray__pb2
import pingpong_pb2 as pingpong__pb2
import replay_pb2 as replay__pb2


class ReplayServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Persistence = channel.stream_stream(
                '/replay.ReplayService/Persistence',
                request_serializer=pingpong__pb2.Ping.SerializeToString,
                response_deserializer=pingpong__pb2.Pong.FromString,
                )
        self.Add = channel.unary_unary(
                '/replay.ReplayService/Add',
                request_serializer=replay__pb2.AddRequest.SerializeToString,
                response_deserializer=ndarray__pb2.Empty.FromString,
                )
        self.Sample = channel.unary_unary(
                '/replay.ReplayService/Sample',
                request_serializer=ndarray__pb2.Empty.SerializeToString,
                response_deserializer=replay__pb2.SampledData.FromString,
                )
        self.UpdateTDError = channel.unary_unary(
                '/replay.ReplayService/UpdateTDError',
                request_serializer=replay__pb2.UpdateTDErrorRequest.SerializeToString,
                response_deserializer=ndarray__pb2.Empty.FromString,
                )
        self.UpdateTransitions = channel.unary_unary(
                '/replay.ReplayService/UpdateTransitions',
                request_serializer=replay__pb2.UpdateTransitionsRequest.SerializeToString,
                response_deserializer=ndarray__pb2.Empty.FromString,
                )


class ReplayServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Persistence(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Add(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Sample(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateTDError(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateTransitions(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ReplayServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Persistence': grpc.stream_stream_rpc_method_handler(
                    servicer.Persistence,
                    request_deserializer=pingpong__pb2.Ping.FromString,
                    response_serializer=pingpong__pb2.Pong.SerializeToString,
            ),
            'Add': grpc.unary_unary_rpc_method_handler(
                    servicer.Add,
                    request_deserializer=replay__pb2.AddRequest.FromString,
                    response_serializer=ndarray__pb2.Empty.SerializeToString,
            ),
            'Sample': grpc.unary_unary_rpc_method_handler(
                    servicer.Sample,
                    request_deserializer=ndarray__pb2.Empty.FromString,
                    response_serializer=replay__pb2.SampledData.SerializeToString,
            ),
            'UpdateTDError': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateTDError,
                    request_deserializer=replay__pb2.UpdateTDErrorRequest.FromString,
                    response_serializer=ndarray__pb2.Empty.SerializeToString,
            ),
            'UpdateTransitions': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateTransitions,
                    request_deserializer=replay__pb2.UpdateTransitionsRequest.FromString,
                    response_serializer=ndarray__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'replay.ReplayService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ReplayService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Persistence(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_stream(request_iterator, target, '/replay.ReplayService/Persistence',
            pingpong__pb2.Ping.SerializeToString,
            pingpong__pb2.Pong.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Add(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/replay.ReplayService/Add',
            replay__pb2.AddRequest.SerializeToString,
            ndarray__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Sample(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/replay.ReplayService/Sample',
            ndarray__pb2.Empty.SerializeToString,
            replay__pb2.SampledData.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateTDError(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/replay.ReplayService/UpdateTDError',
            replay__pb2.UpdateTDErrorRequest.SerializeToString,
            ndarray__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateTransitions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/replay.ReplayService/UpdateTransitions',
            replay__pb2.UpdateTransitionsRequest.SerializeToString,
            ndarray__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
