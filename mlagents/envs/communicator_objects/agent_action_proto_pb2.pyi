# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.internal.containers import (
    RepeatedScalarFieldContainer as google___protobuf___internal___containers___RepeatedScalarFieldContainer,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from mlagents.envs.communicator_objects.custom_action_pb2 import (
    CustomAction as mlagents___envs___communicator_objects___custom_action_pb2___CustomAction,
)

from typing import (
    Iterable as typing___Iterable,
    Optional as typing___Optional,
    Text as typing___Text,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


class AgentActionProto(google___protobuf___message___Message):
    vector_actions = ... # type: google___protobuf___internal___containers___RepeatedScalarFieldContainer[float]
    text_actions = ... # type: typing___Text
    memories = ... # type: google___protobuf___internal___containers___RepeatedScalarFieldContainer[float]
    value = ... # type: float

    @property
    def custom_action(self) -> mlagents___envs___communicator_objects___custom_action_pb2___CustomAction: ...

    def __init__(self,
        vector_actions : typing___Optional[typing___Iterable[float]] = None,
        text_actions : typing___Optional[typing___Text] = None,
        memories : typing___Optional[typing___Iterable[float]] = None,
        value : typing___Optional[float] = None,
        custom_action : typing___Optional[mlagents___envs___communicator_objects___custom_action_pb2___CustomAction] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> AgentActionProto: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def HasField(self, field_name: typing_extensions___Literal[u"custom_action"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"custom_action",u"memories",u"text_actions",u"value",u"vector_actions"]) -> None: ...
    else:
        def HasField(self, field_name: typing_extensions___Literal[u"custom_action",b"custom_action"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[b"custom_action",b"memories",b"text_actions",b"value",b"vector_actions"]) -> None: ...
