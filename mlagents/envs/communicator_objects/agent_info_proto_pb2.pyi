# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.internal.containers import (
    RepeatedScalarFieldContainer as google___protobuf___internal___containers___RepeatedScalarFieldContainer,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from mlagents.envs.communicator_objects.custom_observation_pb2 import (
    CustomObservation as mlagents___envs___communicator_objects___custom_observation_pb2___CustomObservation,
)

from typing import (
    Iterable as typing___Iterable,
    Optional as typing___Optional,
    Text as typing___Text,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


class AgentInfoProto(google___protobuf___message___Message):
    stacked_vector_observation = ... # type: google___protobuf___internal___containers___RepeatedScalarFieldContainer[float]
    visual_observations = ... # type: google___protobuf___internal___containers___RepeatedScalarFieldContainer[bytes]
    text_observation = ... # type: typing___Text
    stored_vector_actions = ... # type: google___protobuf___internal___containers___RepeatedScalarFieldContainer[float]
    stored_text_actions = ... # type: typing___Text
    memories = ... # type: google___protobuf___internal___containers___RepeatedScalarFieldContainer[float]
    reward = ... # type: float
    done = ... # type: bool
    max_step_reached = ... # type: bool
    id = ... # type: int
    action_mask = ... # type: google___protobuf___internal___containers___RepeatedScalarFieldContainer[bool]

    @property
    def custom_observation(self) -> mlagents___envs___communicator_objects___custom_observation_pb2___CustomObservation: ...

    def __init__(self,
        stacked_vector_observation : typing___Optional[typing___Iterable[float]] = None,
        visual_observations : typing___Optional[typing___Iterable[bytes]] = None,
        text_observation : typing___Optional[typing___Text] = None,
        stored_vector_actions : typing___Optional[typing___Iterable[float]] = None,
        stored_text_actions : typing___Optional[typing___Text] = None,
        memories : typing___Optional[typing___Iterable[float]] = None,
        reward : typing___Optional[float] = None,
        done : typing___Optional[bool] = None,
        max_step_reached : typing___Optional[bool] = None,
        id : typing___Optional[int] = None,
        action_mask : typing___Optional[typing___Iterable[bool]] = None,
        custom_observation : typing___Optional[mlagents___envs___communicator_objects___custom_observation_pb2___CustomObservation] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> AgentInfoProto: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def HasField(self, field_name: typing_extensions___Literal[u"custom_observation"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"action_mask",u"custom_observation",u"done",u"id",u"max_step_reached",u"memories",u"reward",u"stacked_vector_observation",u"stored_text_actions",u"stored_vector_actions",u"text_observation",u"visual_observations"]) -> None: ...
    else:
        def HasField(self, field_name: typing_extensions___Literal[u"custom_observation",b"custom_observation"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[b"action_mask",b"custom_observation",b"done",b"id",b"max_step_reached",b"memories",b"reward",b"stacked_vector_observation",b"stored_text_actions",b"stored_vector_actions",b"text_observation",b"visual_observations"]) -> None: ...
